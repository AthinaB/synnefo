DJANGO TRANSLATIONS OF STATIC TEXT

0)from our project's base, we add directory locale
$mkdir locale

then we add on the settings.py the language code
eg
LANGUAGES = (
  ('el', u'Ελληνικά'),
  ('en', 'English'),
)


1)for each language we want to add, we run makemessages, from our project's base:

$ ./bin/django-admin.py makemessages -l el -e html,txt,py
(./bin/django-admin.py makemessages -l el -e html,txt,py --ignore=lib/*)


this will add the Greek language, and we specify that html, txt and python files contain translatable strings

2)we translate our strings. 
on .py files, (eg views.py), we add on the beggining of the file

from django.utils.translation import gettext_lazy as _

and then each string that needs translation becomes like this:  _('string')
eg

help_text=_("letters and numbers only"))
'title': _('Ubuntu 10.10 server 64bit'),


on django templates (html files), on the beggining of the file we add {% load i18n %} 
then on each string that needs to be translated, we put it on {% trans "string" %}, for example {% trans "Home" %}


3)when we have put our strings to be translated, from the project's base we run
$ django-admin.py makemessages -l el -e html,txt,py
processing language el

this creates (or updates) the po file for the Greek language. We run this command each time we add new strings to be translated. After that, we can translate our strings, on the po file (locale/el/LC_MESSAGES/django.po)

4)when we are ready, we run the following command from the project's base
$ ./bin/django-admin.py compilemessages

this compiles the po files to mo. 

Our strings will appear translated once we change the language (eg from a dropdown menu in the page)

More info:
http://docs.djangoproject.com/en/dev/topics/i18n/internationalization/

