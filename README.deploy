DEPLOYMENT notes   
=================

- Service dependencies

    *rabbitmq
      RabbitMQ is used as a generic message broker for the system. It should
      be installed on two seperate machines (VMs will do for the moment)
      in a high availability configuration as described here:

        http://www.rabbitmq.com/pacemaker.html

      After installation, create a user and set its permissions

        rabbitmqctl add_user okeanos 0k3@n0s
        rabbitmqctl set_permissions -p / okeanos  "^.*" ".*" ".*"

    The values set for the user and password must be mirrored in the
    RABBIT_* variables in settings.py

    * ganeti-eventd

      The Ganeti monitoring daemon must run on the Ganeti master node.

      Edit all relevant settings in settings.py, GANETI_* variables.
      Then start the server on the Ganeti master as root

      # cd synnefo && python ./ganeti/ganeti-eventd

      FIXME: The server must be started from the project root directory.
      TBD: how to handle master migration.

    * db_controller

      db_controller receives notifications from the queue and updates the DB.

      For now, db_controller must be run by hand:
      $ ./db/db_controller.py

      FIXME. Complete this part.

    * vncauthproxy

      To support OOB console access to the VMs over VNC, the vncauthproxy
      daemon must be running on every Django node.

      Download and install vncauthproxy from its own repository,
      at https://code.grnet.gr/git/vncauthproxy (known good commit: 48b1400e).

      Edit default settings on top of vncauthproxy.py.
      Set CTRL_SOCKET in util/vapclient.py to point to its control socket.

      FIXME: The CTRL_SOCKET setting will be moved to settings.py as
      VNCAUTHPROXY_CTRL_SOCKET.

- OS Specific instructions

    * Debian Squeeze

      TBD.

