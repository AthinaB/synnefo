# -*- coding: utf-8 -*-

# Django settings for synnefo project.
import os

PROJECT_PATH = os.path.dirname(os.path.abspath(__file__)) + '/'

DEBUG = True
TEMPLATE_DEBUG = DEBUG

# A quick-n-dirty way to know if we're running unit tests
import sys
TEST = False
if len(sys.argv) >= 2:
    if os.path.basename(sys.argv[0]) == 'manage.py' and \
        (sys.argv[1] == 'test' or sys.argv[1] == 'hudson'):
            TEST = True

ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': {
        # 'postgresql_psycopg2', 'postgresql','mysql', 'sqlite3' or 'oracle'
        'ENGINE': 'sqlite3',
         # ATTENTION: This *must* be the absolute path if using sqlite3.
         # See: http://docs.djangoproject.com/en/dev/ref/settings/#name
        'NAME': PROJECT_PATH + 'database.sqlite',
        'USER': '',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        # Set to empty string for localhost. Not used with sqlite3.
        'HOST': '',
        # Set to empty string for default. Not used with sqlite3.
        'PORT': '',
    }
}

if DATABASES['default']['ENGINE'].endswith('mysql'):
    DATABASES['default']['OPTIONS'] = {
        'init_command': 'SET storage_engine=INNODB',
    }

SESSION_ENGINE = "django.contrib.sessions.backends.cache"

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# On Unix systems, a value of None will cause Django to use the same
# timezone as the operating system.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'UTC'   # Warning: API depends on the TIME_ZONE being UTC

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale
USE_L10N = True

# Absolute path to the directory that holds media.
# Example: "/home/media/media.lawrence.com/"
MEDIA_ROOT = ''

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash if there is a path component (optional in other cases).
# Examples: "http://media.lawrence.com", "http://example.com/media/"
MEDIA_URL = ''

# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
# trailing slash.
# Examples: "http://foo.com/media/", "/media/".
ADMIN_MEDIA_PREFIX = '/media/'

# our REST API would prefer to be explicit about trailing slashes
APPEND_SLASH = False

# Make this unique, and don't share it with anybody.
SECRET_KEY = 'ly6)mw6a7x%n)-e#zzk4jo6f2=uqu!1o%)2-(7lo+f9yd^k^bg'

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

TEMPLATE_CONTEXT_PROCESSORS = (
    'django.core.context_processors.request',
    'django.core.context_processors.i18n',
    'django.contrib.auth.context_processors.auth',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'synnefo.middleware.StripURLMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
)

ROOT_URLCONF = 'synnefo.urls'

TEMPLATE_DIRS = (
    # Put strings here, like "/home/html/django_templates"
    # or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
)

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.admin',
    # 'django.contrib.admindocs',
    'synnefo.auth',
    'synnefo.api',
    'synnefo.ui',
    'synnefo.db',
    'synnefo.ganeti',
    'synnefo.logic',
    'south'
)

# The RAPI endpoint and associated credentials to use
# for talking to the Ganeti backend.
GANETI_MASTER_IP = "62.217.120.78"
GANETI_CLUSTER_INFO = (GANETI_MASTER_IP, 5080, "synnefo", "ocean!")

# This prefix gets used when determining the instance names
# of Synnefo VMs at the Ganeti backend.
# The dash must always appear in the name!
BACKEND_PREFIX_ID = "snf-"

LANGUAGES = (
  ('el', u'Ελληνικά'),
  ('en', 'English'),
)

# needed for django. this is the class that implements the User system.
# We use this to allow users to add stuff for themselves (about, image etc)
#http://docs.djangoproject.com/en/dev/topics/auth/#auth-profiles
AUTH_PROFILE_MODULE = 'synnefo.OceanUser'

# API requests from the GUI time out after that many seconds.
TIMEOUT = 10 * 1000

# The API will return HTTP Bad Request if the ?changes-since
# parameter refers to a point in time more than POLL_LIMIT seconds ago.
POLL_LIMIT = 3600

# Configuration for ganeti-eventd, the Ganeti notification daemon
GANETI_EVENTD_LOG_FILE = "/var/log/synnefo/ganeti-eventd.log"
GANETI_EVENTD_PID_FILE = "/var/run/synnefo/ganeti-eventd.pid"

#Rabbit work queue end point
RABBIT_HOST = "62.217.120.67:5672"
RABBIT_USERNAME = "okeanos"
RABBIT_PASSWORD = "0k3@n0s"
RABBIT_VHOST = "/"

# Queues, exchanges and bindings
EXCHANGE_GANETI = "ganeti"  # Messages from Ganeti
EXCHANGE_CRON = "cron"      # Messages from periodically triggered tasks
EXCHANGE_API = "api"        # Messages from the Rest API
EXCHANGES = (EXCHANGE_GANETI, EXCHANGE_CRON, EXCHANGE_API)

QUEUE_GANETI_EVENTS = "events"
QUEUE_CRON_CREDITS = "credits"
QUEUE_EMAIL = "email"
QUEUE_DEBUG = "debug"       # Debug queue, retrieves all messages
QUEUES = (QUEUE_GANETI_EVENTS, QUEUE_CRON_CREDITS, QUEUE_EMAIL)

BINDINGS_DEBUG = [
    # Queue         # Exchange          # RouteKey  # Handler
    (QUEUE_DEBUG,   EXCHANGE_GANETI,    '#',        'dummy_proc'),
    (QUEUE_DEBUG,   EXCHANGE_CRON,      '#',        'dummy_proc'),
    (QUEUE_DEBUG,   EXCHANGE_API,       '#',        'dummy_proc'),
]

#Prefix-based naming for db routing key, only 
DB_HANDLER_KEY = 'ganeti.%s.#' % BACKEND_PREFIX_ID.split('-')[0]

BINDINGS = [
    # Queue                 # Exchange          # RouteKey      #Handler
    (QUEUE_GANETI_EVENTS,   EXCHANGE_GANETI,    'ganeti.*',     'update_db'),
    (QUEUE_CRON_CREDITS,    EXCHANGE_CRON,      '*.credits.*',  'update_credits'),
    (QUEUE_EMAIL,           EXCHANGE_API,       '*.email.*',    'send_email'),
    (QUEUE_EMAIL,           EXCHANGE_CRON,      '*.email.*',    'send_email'),
]

# Logic dispatcher settings
DISPATCHER_LOG_FILE = "/var/log/okeanos.log"

# The API implementation needs to accept and return absolute references
# to its resources. Thus, it needs to know its public URL.
API_ROOT_URL = 'http://127.0.0.1:8000/api/'

