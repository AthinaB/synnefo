diff --git a/nfdhcpd b/nfdhcpd
index c3bdcc7..19e8d6c 100755
--- a/nfdhcpd
+++ b/nfdhcpd
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python2.7
 #
 
 # nfdcpd: A promiscuous, NFQUEUE-based DHCP server for virtual machine hosting
@@ -496,7 +496,9 @@ class VMNetProxy(object): # pylint: disable=R0902
         """ Generate a reply to a BOOTP/DHCP request
 
         """
-        indev = payload.get_indev()
+        # If the packet comes from a bridged interface, use the ifindex
+        # of the physical device instead of the ifindex of the bridge interface
+        indev = payload.get_physindev() or payload.get_indev()
         try:
             # Get the actual interface from the ifindex
             iface = self.ifaces[indev]
@@ -537,7 +539,7 @@ class VMNetProxy(object): # pylint: disable=R0902
             return
 
         resp = Ether(dst=mac, src=self.get_iface_hw_addr(iface))/\
-               IP(src=DHCP_DUMMY_SERVER_IP, dst=binding.ip)/\
+               IP(src=self.dhcp_server_ip, dst=binding.ip)/\
                UDP(sport=pkt.dport, dport=pkt.sport)/resp
         subnet = self.subnets[binding.link]
 
@@ -593,7 +595,7 @@ class VMNetProxy(object): # pylint: disable=R0902
         # Finally, always add the server identifier and end options
         dhcp_options += [
             ("message-type", resp_type),
-            ("server_id", DHCP_DUMMY_SERVER_IP),
+            ("server_id", self.dhcp_server_ip),
             "end"
         ]
         resp /= DHCP(options=dhcp_options)
@@ -606,7 +608,7 @@ class VMNetProxy(object): # pylint: disable=R0902
         """ Generate a reply to a BOOTP/DHCP request
 
         """
-        indev = payload.get_indev()
+        indev = payload.get_physindev() or payload.get_indev()
         try:
             # Get the actual interface from the ifindex
             iface = self.ifaces[indev]
@@ -641,7 +643,7 @@ class VMNetProxy(object): # pylint: disable=R0902
         """ Generate a reply to an ICMPv6 neighbor solicitation
 
         """
-        indev = payload.get_indev()
+        indev = payload.get_physindev() or payload.get_indev()
         try:
             # Get the actual interface from the ifindex
             iface = self.ifaces[indev]
