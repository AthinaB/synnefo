#! /bin/sh

### BEGIN INIT INFO
# Provides:          snf-ganeti-eventd
# Required-Start:    $remote_fs $syslog ganeti
# Required-Stop:     $remote_fs $syslog 
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Start-After:	 ganeti
# Short-Description: Synnefo ganeti-eventd daemon
# Description:       ganeti-eventd is a daemon 
### END INIT INFO

set -e

# /etc/init.d/snf-ganeti-eventd: start and stop the ganeti-eventd daemon
# script skeleton stolen from rsyncd


DAEMON=/usr/sbin/snf-ganeti-eventd
SNF_EVENTD_PID_FILE=/var/run/snf-ganeti-eventd.pid
SNF_EVENTD_DEFAULTS=/etc/default/snf-ganeti-eventd
SNF_EVENTD_OPTS=''
SNF_EVENTD_ENABLE=true
SNF_USER="root"

test -x $DAEMON || exit 0

. /lib/lsb/init-functions

if [ -s $SNF_EVENTD_DEFAULTS ]; then
    . $SNF_EVENTD_DEFAULTS
fi

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"
export PYTHONPATH="${PYTHONPATH:+$PYTHONPATH:}/usr/share/ganeti"

check_ganeti_master() {
    MASTER=`/usr/sbin/gnt-cluster getmaster`
    HOST=`/bin/hostname -f`

    if [ "x$MASTER" != x$HOST ]; then
        log_warning_msg "snf-ganeti-eventd should run on the ganeti master only, aborting start (use 'force-start' if you know what you are doing)"
        log_end_msg 0
        exit 0
    fi
}

eventd_start() {
    if start-stop-daemon --start --chuid $SNF_USER --pidfile $SNF_EVENTD_PID_FILE \
		--exec $DAEMON -- $SNF_EVENTD_OPTS
    then
        rc=0
        sleep 1
        if ! kill -0 $(cat $SNF_EVENTD_PID_FILE) >/dev/null 2>&1; then
            log_failure_msg "snf-ganeti-eventd daemon failed to start"
            rc=1
        fi
    else
        rc=1
    fi
    if [ $rc -eq 0 ]; then
        log_end_msg 0
    else
        log_end_msg 1
    fi
} # eventd_start

case "$1" in
  start)
        if "$SNF_EVENTD_ENABLE"; then
            log_daemon_msg "Starting snf-ganeti-eventd daemon" "snf-ganeti-eventd"
            if [ -s $SNF_EVENTD_PID_FILE ] && kill -0 $(cat $SNF_EVENTD_PID_FILE) >/dev/null 2>&1; then
                log_progress_msg "apparently already running"
                log_end_msg 0
                exit 0
            fi
            # Check if we are on the Ganeti master node
            check_ganeti_master
            eventd_start
        else
            if [ -s "$SNF_EVENTD_DEFAULTS" ]; then
                [ "$VERBOSE" != no ] && log_warning_msg "snf-ganeti-eventd daemon not enabled in $SNF_EVENTD_DEFAULTS, not starting..."
            fi
        fi
        ;;
  force-start)
        if "$SNF_EVENTD_ENABLE"; then
            log_daemon_msg "Starting snf-ganeti-eventd daemon" "snf-ganeti-eventd"
        else
            if [ -s "$SNF_EVENTD_DEFAULTS" ]; then
                [ "$VERBOSE" != no ] && log_warning_msg "snf-ganeti-eventd daemon not enabled in $SNF_EVENTD_DEFAULTS, starting anyway"
            fi
        fi

        if [ -s $SNF_EVENTD_PID_FILE ] && kill -0 $(cat $SNF_EVENTD_PID_FILE) >/dev/null 2>&1; then
            log_progress_msg "apparently already running"
            log_end_msg 0
            exit 0
        fi
        eventd_start
        ;;
  stop)
        log_daemon_msg "Stopping snf-ganeti-eventd daemon" "snf-ganeti-eventd"
        start-stop-daemon --stop --quiet --oknodo --pidfile $SNF_EVENTD_PID_FILE
        log_end_msg $?
        ;;
  restart)
        set +e
        if $SNF_EVENTD_ENABLE; then
            log_daemon_msg "Restarting snf-ganeti-eventd daemon" "snf-ganeti-eventd"
            if [ -s $SNF_EVENTD_PID_FILE ] && kill -0 $(cat $SNF_EVENTD_PID_FILE) >/dev/null 2>&1; then
                start-stop-daemon --stop --quiet --oknodo --pidfile $SNF_EVENTD_PID_FILE || true
                sleep 1
            else
                log_warning_msg "snf-ganeti-eventd daemon not running, attempting to start."
            fi
            # Check if we are on the Ganeti master node, before starting
            check_ganeti_master
            eventd_start
        else
            if [ -s "$SNF_EVENTD_DEFAULTS" ]; then
                [ "$VERBOSE" != no ] && log_warning_msg "snf-ganeti-eventd daemon not enabled in $SNF_EVENTD_DEFAULTS, not starting..."
            fi
        fi
        ;;

  status)
        status_of_proc -p $SNF_EVENTD_PID_FILE "$DAEMON" ganeti-eventd
        exit $? # notreached due to set -e
        ;;
  *)
        echo "Usage: /etc/init.d/snf-ganeti-eventd {start|stop|restart|force-start|status}"
        exit 1
esac

exit 0
